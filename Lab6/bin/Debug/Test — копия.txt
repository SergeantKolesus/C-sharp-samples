Красно-чёрное дерево (англ.) — двоичное дерево поиска, в котором баланс осуществляется на основе "цвета" узла дерева, который принимает только два значения: "красный" (англ. и "чёрный" (англ. 


Пример красно-чёрного дерева.
При этом все листья дерева являются фиктивными и не содержат данных, но относятся к дереву и являются чёрными.

Для экономии памяти фиктивные листья можно сделать одним общим фиктивным листом.

Содержание
1	Свойства
1.1	Оригинальные
1.2	Альтернативные
2	Высота красно-черного дерева
3	Операции
3.1	Вставка элемента
3.2	Удаление вершины
3.3	Объединение красно-чёрных деревьев
3.4	Разрезание красно-чёрного дерева
4	Преимущества красно-чёрных деревьев
5	Связь с 2-3 и 2-4 деревьями
5.1	Изоморфизм деревьев
5.2	Корректность сопоставления деревьев
5.3	Сопоставление операций в деревьях
6	См. также
7	Примечания
8	Источники информации
Свойства
Оригинальные
Красно-чёрным называется бинарное поисковое дерево, у которого каждому узлу сопоставлен дополнительный атрибут — цвет и для которого выполняются следующие свойства:

Каждый узел промаркирован красным или чёрным цветом
Корень и конечные узлы (листья) дерева — чёрные
У красного узла родительский узел — чёрный
Все простые пути из любого узла x до листьев содержат одинаковое количество чёрных узлов
Чёрный узел может иметь чёрного родителя

Ослабленное красно-чёрное дерево.
Определим ослабленное красно-чёрное дерево как красно-чёрное дерево, корень которого может быть как чёрным, так и красным. Докажем, что при таком условии не будут выполняться и некоторые другие свойства красно-черных деревьев. При добавлении вершины около корня могут возникнуть повороты, и корневая вершина перейдет в какое-то поддерево. Из-за этого может возникнуть ситуация, в которой подряд будут идти две красные вершины. То же самое может произойти из-за перекрашиваний возле корня. Если мы продолжим вставлять элементы подобным образом, свойства дерева перестанут выполняться, и оно перестанет быть сбалансированным. Таким образом, время выполнения некоторых операций ухудшится.

Перед тем, как перейдем к примеру, договоримся, что мы разрешим в ослабленном красно-чёрном дереве при первом добавлении вершин (обеих, правой и левой) к красному корню делать их черными (немного модифицированный алгоритм вставки). Предыдущее условие можно заменить на другое, позволяющее корню иметь красных детей.

Рассмотрим пример справа. Получим такое дерево добавляя ключи в следующем порядке: 10, 6, 45, 4, 8. На примере можно видеть, что после добавления вершины с ключом 0 и соответствующих перекрашиваний вершина с ключом 6 становится красной с красным родителем. Дальше добавим 5. Так как мы добавляем к черной вершине, все свойства дерева сохраняются без перекрашиваний. Но добавим после этого (−3). Тогда вершина с ключом 4 станет красной (0 и 5 — черными) и у нас образуются три красные вершины подряд. Продолжая добавлять вершины таким образом, мы можем сделать сильно разбалансированное дерево.

Альтернативные
В книге Кормена "Алгоритмы: построение и анализ" дается немного иное определение красно-черного дерева, а именно:

Двоичное дерево поиска является красно-чёрным, если обладает следующими свойствами:

Каждая вершина — либо красная, либо черная
Каждый лист — черный
Если вершина красная, оба ее ребенка черные
Все пути, идущие от корня к листьям, содержат одинаковое количество черных вершин
То, что только черная вершина может иметь красных детей, совместно с 4-ым свойством говорит о том, что корень дерева должен быть черным, а значит определения можно считать эквивалентными.

Высота красно-черного дерева
Определение:
Будем называть чёрной высотой (англ. ) вершины x число чёрных вершин на пути из x в лист.

Лемма:
В красно-черном дереве с черной высотой hb количество внутренних вершин не менее 2hb−1−1.
Доказательство:
▹
Докажем по индукции по обычной высоте  что поддерево любого узла x с черной высотой hb(x) содержит не менее 2hb(x)−1−1 внутренних узлов. Здесь h(x) — кратчайшее расстояние от вершины x до какого-то из листьев.

База индукции:

Если высота узла равна, то это лист

Переход:

Так как любая внутренняя вершина (вершина, у которой высота положительна) имеет двух потомков, то применим предположение индукции к ним — их высоты на единицу меньше высоты x. Тогда черные высоты детей могут быть hb(x) или hb(x)−1 — если потомок красный или черный соответственно.

Тогда по предположению индукции в каждом из поддеревьев не менее 2hb(x)−2−1 вершин. Тогда всего в поддереве не менее 2⋅(2hb(x)−2−1)+1=2hb(x)−1−1 вершин (+1 — мы учли еще саму вершину x).

Переход доказан. Теперь, если мы рассмотрим корень всего дерева в качестве x, то получится, что всего вершин в дереве не менее 2hb−1−1.

Следовательно, утверждение верно и для всего дерева.
◃
Теорема:
Красно-чёрное дерево с ключами имеет высоту
Доказательство:
▹
Рассмотрим красно-чёрное дерево с высотой h. Так как у красной вершины чёрные дети (по свойству 3) количество красных вершин не больше h2. Тогда чёрных вершин не меньше, чем h2−1.

По доказанной лемме, для количества внутренних вершин в дереве N выполняется неравенство:

Прологарифмировав неравенство, имеем:
◃
Операции
Узел, с которым мы работаем, на картинках имеет имя x.